/* ==============================
   SecondaryButton.module.css
   ============================== */

/* Remove link styling when SecondaryButton is wrapped in <a> tag */
.buttonLink {
  text-decoration: none;
  color: inherit;
  border: none;
  outline: none;
}

.buttonLink:hover,
.buttonLink:focus,
.buttonLink:active,
.buttonLink:visited {
  text-decoration: none;
  color: inherit;
  border: none;
  outline: none;
}

   @property --angle-1 {
    syntax: "<angle>";
    inherits: false;
    initial-value: -75deg;
  }
  @property --angle-2 {
    syntax: "<angle>";
    inherits: false;
    initial-value: -45deg;
  }
  
  /* CSS custom properties moved to global.css */
  
  /* ========== BUTTON ========== */
  
  .buttonWrap {
    position: relative;
    z-index: 2;
    border-radius: 999vw;
    background: transparent;
    pointer-events: none;
    transition: all var(--anim--hover-time) var(--anim--hover-ease);
  }
  
  .buttonShadow {
    --shadowCutoffFix: 0.5em;
    position: absolute;
    width: calc(100% + var(--shadowCutoffFix));
    height: calc(100% + var(--shadowCutoffFix));
    top: calc(0% - var(--shadowCutoffFix) / 2);
    left: calc(0% - var(--shadowCutoffFix) / 2);
    filter: blur(clamp(2px, 0.125em, 12px));
    overflow: visible;
    pointer-events: none;
  }
  .buttonShadow::after {
    content: "";
    position: absolute;
    z-index: 0;
    inset: 0;
    border-radius: 999vw;
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.1));
      width: calc(100% - var(--shadowCutoffFix));
  height: calc(100% - var(--shadowCutoffFix));
  top: calc(var(--shadowCutoffFix) / 2);
  left: calc(var(--shadowCutoffFix) / 2);
  padding: 0;
    box-sizing: border-box;
    mask:
      linear-gradient(#000 0 0) content-box,
      linear-gradient(#000 0 0);
    mask-composite: exclude;
    transition: all var(--anim--hover-time) var(--anim--hover-ease);
    overflow: visible;
    opacity: 1;
  }
  
  /* ========== BUTTON BASE STYLES ========== */
  
  .btn {
    --borderWidth: clamp(1px, 0.0625em, 4px);
    all: unset;
    cursor: pointer;
    position: relative;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    pointer-events: auto;
    z-index: 3;
    background: linear-gradient(
      -75deg,
      rgba(255, 255, 255, 0.25),
      rgba(255, 255, 255, 0.5),
      rgba(255, 255, 255, 0.25)
    );
    border-radius: 999vw;
    box-shadow:
      inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
      inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.5),
      0 0.25em 0.125em -0.125em rgba(0, 0, 0, 0.2),
      0 0 0.1em 0.25em inset rgba(255, 255, 255, 0.2),
      0 0 0 0 rgba(255, 255, 255, 1);
    -webkit-backdrop-filter: blur(clamp(1px, 0.125em, 4px));
    backdrop-filter: blur(clamp(1px, 0.125em, 4px));
    transition: all var(--anim--hover-time) var(--anim--hover-ease);
    will-change: transform, box-shadow, background;
  }
  .btn:hover {
    transform: scale(0.975);
    box-shadow:
      inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
      inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.5),
      0 0.15em 0.05em -0.1em rgba(0, 0, 0, 0.25),
      0 0 0.05em 0.1em inset rgba(255, 255, 255, 0.5),
      0 0 0 0 rgba(255, 255, 255, 1);
  }
  
  .btn:focus-visible {
    outline: 2px solid var(--color-accent, #4682B4);
    outline-offset: 2px;
    box-shadow: var(--focus-ring, 0 0 0 3px var(--color-accent, #4682B4));
  }
  
  /* Button Text */
  .btnText {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5em;
    user-select: none;
    font-family: "Inter", sans-serif;
    letter-spacing: -0.05em;
    font-weight: 500;
    font-size: 1em;
    color: var(--color-black);
    text-shadow: 0em 0.25em 0.05em rgba(0, 0, 0, 0.1);
    transition: all var(--anim--hover-time) var(--anim--hover-ease);
    padding-inline: 1.5em;
    padding-block: 0.875em;
  }
  .btn:hover .btnText {
    text-shadow: 0.025em 0.025em 0.025em rgba(0, 0, 0, 0.12);
  }
  .btnText::after {
    content: "";
    display: block;
    position: absolute;
    z-index: 1;
    width: calc(100% - var(--borderWidth));
    height: calc(100% - var(--borderWidth));
    top: calc(0% + var(--borderWidth) / 2);
    left: calc(0% + var(--borderWidth) / 2);
    box-sizing: border-box;
    border-radius: 999vw;
    overflow: clip;
    background: linear-gradient(
      var(--angle-2),
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.5) 40% 50%,
      rgba(255, 255, 255, 0) 55%
    );
    z-index: 3;
    mix-blend-mode: screen;
    pointer-events: none;
    background-size: 200% 200%;
    background-position: 0% 50%;
    background-repeat: no-repeat;
    transition:
      background-position calc(var(--anim--hover-time) * 1.25)
        var(--anim--hover-ease),
      --angle-2 calc(var(--anim--hover-time) * 1.25) var(--anim--hover-ease);
  }
  .btn:hover .btnText::after {
    background-position: 25% 50%;
  }
  .btn:active .btnText::after {
    background-position: 50% 15%;
    --angle-2: -15deg;
  }
  
  /* ========== BUTTON OUTLINE ========== */
  .btn::after {
    content: "";
    position: absolute;
    z-index: 1;
    inset: 0;
    border-radius: 999vw;
    width: calc(100% + var(--borderWidth));
    height: calc(100% + var(--borderWidth));
    top: calc(0% - var(--borderWidth) / 2);
    left: calc(0% - var(--borderWidth) / 2);
    padding: var(--borderWidth);
    box-sizing: border-box;
    background: conic-gradient(
        from var(--angle-1) at 50% 50%,
        rgba(0, 0, 0, 0.5),
        rgba(0, 0, 0, 0) 5% 40%,
        rgba(0, 0, 0, 0.5) 50%,
        rgba(0, 0, 0, 0) 60% 95%,
        rgba(0, 0, 0, 0.5)
      ),
      linear-gradient(180deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5));
    mask:
      linear-gradient(#000 0 0) content-box,
      linear-gradient(#000 0 0);
    mask-composite: exclude;
    transition:
      all var(--anim--hover-time) var(--anim--hover-ease),
      --angle-1 500ms ease;
    box-shadow: inset 0 0 0 calc(var(--borderWidth) / 2) rgba(255, 255, 255, 0.5);
  }
  .btn:hover::after {
    --angle-1: -125deg;
  }
  .btn:active::after {
    --angle-1: -75deg;
  }
  
  /* Shadow Hover */
  .buttonWrap:has(.btn:hover) .buttonShadow {
    filter: blur(clamp(2px, 0.0625em, 6px));
    transition: filter var(--anim--hover-time) var(--anim--hover-ease);
  }
  .buttonWrap:has(.btn:hover) .buttonShadow::after {
    top: calc(var(--shadowCutoffFix) / 4);
    opacity: 1;
  }
  
  /* Rotation */
  .buttonWrap:has(.btn:active) {
    transform: rotate3d(1, 0, 0, 25deg);
  }
  .buttonWrap:has(.btn:active) .btn {
    box-shadow:
      inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
      inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.5),
      0 0.125em 0.125em -0.125em rgba(0, 0, 0, 0.2),
      0 0 0.1em 0.25em inset rgba(255, 255, 255, 0.2),
      0 0.225em 0.05em 0 rgba(0, 0, 0, 0.05),
      0 0.25em 0 0 rgba(255, 255, 255, 0.75),
      inset 0 0.25em 0.05em 0 rgba(0, 0, 0, 0.15);
  }
  .buttonWrap:has(.btn:active) .buttonShadow {
    filter: blur(clamp(2px, 0.125em, 12px));
  }
  .buttonWrap:has(.btn:active) .buttonShadow::after {
    top: calc(var(--shadowCutoffFix) / 3);
    opacity: 0.75;
  }
  .buttonWrap:has(.btn:active) .btnText {
    text-shadow: 0.025em 0.25em 0.05em rgba(0, 0, 0, 0.12);
  }
  
  @media (hover: none) and (pointer: coarse) {
    .btnText::after,
    .btn:active .btnText::after {
      --angle-2: -45deg;
    }
    .btn::after,
    .btn:hover::after,
    .btn:active::after {
      --angle-1: -75deg;
    }
  }
  
  /* Responsive */
  @media (max-width: var(--breakpoint-2xl)) {
    .btnText {
      padding-inline: 1em;
      padding-block: 0.75em;
      font-size: 0.96em;
    }
  }
  