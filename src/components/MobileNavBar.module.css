/* Main wrapper */
.wrapper {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  padding: 0;
  transition: transform 0.3s ease-in-out;
  display: none; /* Hidden by default, shown only on mobile */
}

.wrapper.hidden {
  transform: translateY(100%);
}

/* Animated Menu */
.menu {
  margin: 0;
  display: flex;
  width: 100%;

  font-size: 1.5em;
  padding: 0 2.85em;
  position: relative;
  align-items: center;
  justify-content: center;
  background-color: var(--color-background);
  border-radius: 0;
  box-shadow: 
    0 -6px 25px rgba(0, 0, 0, 0.12),
    0 15px 35px rgba(0, 0, 0, 0.2);
  margin: 0 auto;
}

.menuItem {
  all: unset;
  flex-grow: 1;
  z-index: 100;
  display: flex;
  cursor: pointer;
  position: relative;
  border-radius: 50%;
  align-items: center;
  will-change: transform;
  justify-content: center;
  padding: 0.55em 0 0.85em;
  transition: transform 0.7s ease;
  text-decoration: none;
  color: var(--text-color, white);
}

.menuItem::before {
  content: "";
  z-index: -1;
  width: 4.2em;
  height: 4.2em;
  border-radius: 50%;
  position: absolute;
  transform: scale(0);
  transition: background-color 0.7s ease, transform 0.7s ease;
}

.menuItem.active {
  transform: translate3d(0, -0.8em, 0);
}

.menuItem.active::before {
  transform: scale(1);
  background-color: var(--bgColorItem);
}

.icon {
  width: 2.6em;
  height: 2.6em;
  color: var(--text-color, white);
  fill: transparent;
  stroke-width: 1pt;
  stroke-miterlimit: 10;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.menuItem.active .icon {
  animation: iconPulse 1.5s ease-in-out;
}

@keyframes iconPulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

.menuBorder {
  left: 0;
  bottom: 99%;
  width: 10.9em;
  height: 2.4em;
  position: absolute;
  clip-path: url(#menu);
  will-change: transform;
  background-color: var(--color-background);
  box-shadow: 
    0 -6px 25px rgba(0, 0, 0, 0.12),
    0 15px 35px rgba(0, 0, 0, 0.2);
  transition: transform 0.7s ease;
}

.svgContainer {
  width: 0;
  height: 0;
  position: absolute;
  overflow: hidden;
}

/* Hamburger Menu Overlay */
.hamburgerOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  z-index: 2000;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.hamburgerMenu {
  background-color: var(--color-background);
      border-radius: var(--radius-lg);
  padding: 2rem;
  max-width: 90vw;
  max-height: 80vh;
  overflow-y: auto;
  box-shadow: 
    0 -6px 25px rgba(0, 0, 0, 0.12),
    0 25px 70px rgba(0, 0, 0, 0.35);
  animation: slideUp 0.3s ease-out;
}

@keyframes slideUp {
  from {
    transform: translateY(50px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.hamburgerHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border-color, #333);
}

.hamburgerHeader h3 {
  margin: 0;
  color: var(--color-text);
  font-size: 1.2rem;
  font-weight: 600;
}

.closeButton {
  all: unset;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;
  color: var(--color-text);
}

.closeButton:hover {
  background-color: var(--hover-color, rgba(255, 255, 255, 0.1));
}

.hamburgerNav {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.hamburgerItem {
  all: unset;
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
      border-radius: var(--radius-md);
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
  color: var(--color-text);
  text-decoration: none;
  font-size: 1rem;
}

.hamburgerItem:hover {
  background-color: var(--hover-color, rgba(255, 255, 255, 0.1));
  transform: translateX(5px);
}

.hamburgerItem svg {
  width: 1.2rem;
  height: 1.2rem;
  color: var(--primary-color, #ff8c00);
}

.hamburgerItem span {
  font-weight: 500;
}

/* Show mobile navbar only on phones */
@media (max-width: var(--breakpoint-3xl)) {
  .wrapper {
    display: flex !important;
  }
}

@media (min-width: calc(var(--breakpoint-3xl) + 1px)) {
  .wrapper {
    display: none !important;
  }
}

/* Responsive adjustments */
@media screen and (max-width: 50em) {
  .menu {
    font-size: 0.8em;
    width: 100%;
  }
  
  .hamburgerMenu {
    padding: 1.5rem;
    margin: 1rem;
  }
  
  .hamburgerItem {
    padding: 0.8rem;
    font-size: 0.9rem;
  }
}

@media screen and (max-width: 30em) {
  .menu {
    font-size: 0.7em;
    padding: 0 1.2em;
    width: 100%;
  }
  
  .hamburgerMenu {
    padding: 1rem;
    margin: 0.5rem;
  }
}

/* Dark mode adjustments */
:global(.dark) .menu {
  background-color: var(--color-background);
}

:global(.dark) .menuBorder {
  background-color: var(--color-background);
}

:global(.dark) .hamburgerMenu {
  background-color: var(--color-background);
}

:global(.dark) .hamburgerHeader {
  border-bottom-color: #444;
}

:global(.dark) .hamburgerItem:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

:global(.dark) .closeButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}



/* Light mode adjustments */
:global(.light) .menu {
  background-color: var(--color-background);
  box-shadow: 
    0 -6px 25px rgba(0, 0, 0, 0.12),
    0 15px 35px rgba(0, 0, 0, 0.2);
}

:global(.light) .menuBorder {
  background-color: var(--color-background);
}

:global(.light) .hamburgerMenu {
  background-color: var(--color-background);
  color: var(--color-text);
}

:global(.light) .hamburgerHeader {
  border-bottom-color: #e0e0e0;
}



:global(.light) .hamburgerHeader h3 {
  color: var(--color-text);
}

:global(.light) .hamburgerItem {
  color: var(--color-text);
}

:global(.light) .hamburgerItem:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

:global(.light) .closeButton {
  color: var(--color-text);
}

:global(.light) .closeButton:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

:global(.light) .icon {
  color: #1a1a1a;
}



  